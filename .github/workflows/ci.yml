name: CI for Java Spring Boot and React

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up JDK 11 (or whichever version you're using)
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      # Navigate to the backend directory
      - name: Navigate to Backend Directory
        run: cd backend

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build and run tests for the backend
      - name: Build and run backend tests
        run: mvn -B clean verify
        working-directory: ./backend

      # Run the backend if you need to for further steps (not necessary if just running tests)
      # - name: Start Spring Boot Backend
      #   run: mvn spring-boot:run
      #   working-directory: ./backend

  frontend:
    name: Build and Test Frontend
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Navigate to the frontend directory
      - name: Navigate to Frontend Directory
        run: cd frontend

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install frontend dependencies
      - name: Install Dependencies
        run: npm install
        working-directory: ./frontend

      # Run tests for the frontend
      - name: Run Frontend Tests
        run: npm test -- --watchAll=false
        working-directory: ./frontend

      # Build the frontend
      - name: Build Frontend
        run: npm run build
        working-directory: ./frontend
